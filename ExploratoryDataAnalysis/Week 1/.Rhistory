json2[1, 1:5]
names(json2)
json2[1,46]
json2[,46]
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readlines(con)
library(html)
htmlCode = readLines(con)
htmlCode
nchar(10)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
data <- read.fwf("./data/getdata-wksst8110.for", c(10,9,4,9,4,9,4,9,4), header = FALSE)
sum(data$V4)
data <- read.fwf("./data/getdata-wksst8110.for",header = FALSE)
data <- read.fwf("./data/getdata-wksst8110.for", c(10,9,4,9,4,9,4,9,4), header = FALSE)
data
sum(data[,4])
data <- read.fwf("./data/getdata-wksst8110.for",header = FALSE, skip=3)
data <- read.fwf("./data/getdata-wksst8110.for", c(10,9,4,9,4,9,4,9,4), skip=3, header = FALSE)
sum(data$V4)
sum(as.numeric(data$V4))
data <- read.fwf("./data/getdata-wksst8110.for", c(10,9,4,9,4,9,4,9,4), header = FALSE)
sum(as.numeric(data$V4))
data <- read.fwf("./data/getdata-wksst8110.for", c(10,9,4,9,4,9,4,9,4), skip=3, header = FALSE)
sum(as.numeric(data[,4]))
getwd()
dt<-data.table(read.csv("./data/acs.csv"))
library(data.table)
dt<-data.table(read.csv("./data/acs.csv"))
dt
head(dt)
dt_col<-names(dt)
dt_col
dt_col<-dt[,grep("^wgtp", colnames(dt))]
dt_col
dt_col<-dt[,grep("^wgtp", names(dt))]
dt_col<-grep("^wgtp", names(dt))
dt_colm<-grep("^wgtp", names(dt))
dt_colm<-grepl("^wgtp", names(dt))
dt2<-dt[,dt_col]
dt2<-dt(dt_col)
dt_col<-names(dt)
dt_col<-names(dt)="^wgtp"
dt_col<-dt[,grep("^wgtp", names(dt), value = TRUE)]
dt_col<-dt[,grep("WGTP|^wgtp", names(dt), value = TRUE)]
dt_col
strsplit(dt_col, "wgtp")
dt_col<-names(dt)
strsplit(dt_col, "wgtp")
ls()
rm(ls())
rm(list=ls())
library(data.table)
dt<-data.table(read.csv("./data/gdp.csv", skip = 5, header = FALSE))
dt<-data.table(read.csv("./data/gdp.csv", skip = 5, header = FALSE, nrows = 190))
dt
dt<-dt[X!=""]
dt<-dt[,list(X, X.1, X.3, X.4)]
names(dt)
dt<-dt[,list(V1, V2, V3, V4)]
dt<-data.table(read.csv("./data/gdp.csv", skip = 5, header = FALSE, nrows = 190))
dt<-dt[V1!=""]
dt<-dt[,list(V1, V2, V4, V5)]
dt
mean(dt$V5)
mean(As.numeric(dt$V5)
mean(As.numeric(dt$V5))
mean(as.numeric(dt$V5))
mean(as.numeric(gsub(",","",dt$V5)))
grep("^United",dt$V4)
grep("^United",as.character(dt$V4))
grep("*United",as.character(dt$V4))
dt_country<-data.table(read.csv("./data/country.csv"))
dt_country
dt_merge<-merge(dt, dt_country, by.x=V1, by.y = CountryCode)
dt_merge<-merge(dt, dt_country, by.x = "V1", by.y = "CountryCode")
grep("June", dt_merge$Special.Notes)
length(grep("June", dt_merge$Special.Notes))
length(grep("Fiscal Year End:June", dt_merge$Special.Notes))
length(grep("Fiscal Year End: June", dt_merge$Special.Notes))
length(grep("Fiscal Year End: June", dt_merge$Special.Notes, ignore.case = TRUE))
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
library(lubridate)
?lubridate
class(sampleTimes)
length(subset(sampleTimes, year = 2012))
sampleTimes<-ymd(sampleTimes)
length(subset(sampleTimes, year = 2012))
sampleTimes
length(sampleTimes(year=2012))
length(subset(sampleTimes, year(sampleTimes) == 2012 & wday(sampleTimes, label=T) == "Mon"))
length(subset(sampleTimes, year(sampleTimes) == 2012)
length(subset(sampleTimes, year(sampleTimes) == 2012))
length(subset(sampleTimes, year(sampleTimes) == 2012))
install.packages("ggplot2")
ls()
rm(list = ls())
setwd("C:/Users/user/datasciencecoursera/ExploratoryDataAnalysis/Week 1")
data <- read.table("household_power_consumption.txt", sep=";")
data<-subset(data, Date>="01/02/2007" & Date <= "02/02/2007")
summary(data)
rm(list = ls())
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE)
data<-subset(data, Date >="01/02/2007" & Date <= "02/02/2007")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE)
data$Date<-as.Date(data$Date)
data<-subset(data, Date >="01/02/2007" & Date <= "02/02/2007")
summary(data)
head(data)
rm(list = ls())
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE)
data[,1]<-as.Date(data[,1])
data<-subset(data, Date >="01/02/2007" & Date <= "02/02/2007")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
data<-subset(data, Date >="01/02/2007" & Date <= "02/02/2007")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
head(data)
class(data$Date)
data<-subset(data, Date =="01/02/2007" & Date == "02/02/2007")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
final_data<-subset(data, Date =="01/02/2007" && Date == "02/02/2007")
final_data <- data[data$Date >= "01/02/2007" & data$Date <= "02/02/2007", ]
final_data <- data[data$Date >= "01/02/2007", ]
final_data <- data[data$Date == "01/02/2007", ]
final_data = subset(data, Date == "01/02/2007")
ddata = subset(data, Date == "01/02/2007")
class(data$Date)
ddata = subset(data, Date = "01/02/2007")
final_data <- data[data$Date == "01/02/2007", ]
final_data<-subset(data, Date =="01/02/2007" | Date == "02/02/2007")
new_data<-subset(data, Date == "01/02/2007" | Date == "02/02/2007")
final_data <- data[data$Date == "01/02/2007", ]rm(list = ls())
rm(list = ls())
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
data[,1]<-as.Date(data[,1], %d%B%Y)
final_data<-subset(data, Date >="01/02/2007" & Date <= "02/02/2007")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
data[,1]<-as.Date(data[,1], "%d%B%Y")
final_data<-subset(data, Date >="01/02/2007" & Date <= "02/02/2007")
head(data)
rm(list = ls())
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
data[,1]<-as.Date(data[,1], "%d%m%y")
final_data<-subset(data, Date >="01/02/2007" & Date <= "02/02/2007")
data$Date<-as.Date(data$Date, "%d%m%Y")
class(data$Date)
head(data)
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
head(data)
data$Date<-as.Date(data$Date, "%d%m%Y")
head(data)
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
data$Date<-as.Date(data$Date, "%Y%m%d")
head(data)
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
data$Date<-as.Date(data$Date)
head(data)
head(data)
rm(list = ls())
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
data$Date<-as.Date(data$Date, "%d/%m/%Y"")
head(data)
class(data$Date)
data$Date<-as.Date(data$Date, "%d/%m/%Y")
class(data$Date)
head(data)
final_data<-subset(data, Date >= 01/02/2007 & Date <= 02/02/2007)
final_data<-subset(data, Date >= "01/02/2007" & Date <= "02/02/2007")
final_data<-subset(data, Date >= 01-02-2007 & Date <= 02-02-2007)
final_data<-subset(data, Date >=As.Date("2007/02/01") & Date <= As.Date("2007/02/02"))
final_data<-subset(data, Date >=as.Date("2007/02/01") & Date <= as.Date("2007/02/02"))
head(final_data)
rm(data)
hist(final_data$Global_active_power, col = "red")
final_data$Global_active_power<-as.Numeric(final_data$Global_active_power)
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
hist(final_data$Global_active_power, col = "red")
xlab = "Global Active Power (kilowatts)"
hist(final_data$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
png("plot1.png", width=480, height=480)
hist(final_data$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Convert Characters to Date objects in the Date column with the dd/mm/yyyy format
data$Date<-as.Date(data$Date, "%d/%m/%Y")
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-subset(data, Date >=As.Date("2007/02/01") & Date <= As.Date("2007/02/02"))
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Convert Characters to Numeric objects in the Global_active_power column
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
plot(final_data$Global_active_power, type = "l")
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Convert Characters to Date objects in the Date column with the dd/mm/yyyy format
data$Date<-as.Date(data$Date, "%d/%m/%Y")
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-subset(data, Date >=As.Date("2007/02/01") & Date <= As.Date("2007/02/02"))
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Convert Characters to Numeric objects in the Global_active_power column
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
plot(final_data$Global_active_power, type = "l", xlab = final_data$Date)
plot(final_data$Date, final_data$Global_active_power, type = "l")
plot(final_data$Global_active_power, final_data$Date, type = "l")
plot(final_data$Global_active_power,type = "l")
plot(final_data$Global_active_power,type = "l", axis = final_data$Date)
plot(final_data$Global_active_power, type = "l", xaxt = "n")
axis(2)
axis(1)
plot(final_data$Global_active_power, type = "l", xaxt = "n")
axis(1, at = final_data$Date)
axis(1, at = seq(final_data$Date, by = 1))
axis.Date(side = 1, final_data$Date, format = "%d/%m/%Y")
axis.Date(side = 3, final_data$Date, format = "%d/%m/%Y")
axis.Date(side = 1, final_data[,1], format = "%d/%m/%Y")
axis(side = 1, final_data$Date)
final_data$Time<-strptime(final_data$Time)
final_data$Time<-strptime(final_data$Time, "hh:mm:ss")
class(final_data$Time)
datetime<-paste(final_data$Date, final_data$Time)
class(datetime)
head(datetime)
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Convert Characters to Date objects in the Date column with the dd/mm/yyyy format
data$Date<-as.Date(data$Date, "%d/%m/%Y")
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-subset(data, Date >=As.Date("2007/02/01") & Date <= As.Date("2007/02/02"))
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Convert Characters to Numeric objects in the Global_active_power column
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
datetime
head(final_data)
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Convert Characters to Date objects in the Date column with the dd/mm/yyyy format
data$Date<-as.Date(data$Date, "%d/%m/%Y")
head(data)
final_data<-subset(data, Date >=As.Date("2007/02/01") & Date <= As.Date("2007/02/02"))
final_data<-subset(data, Date >=as.Date("2007/02/01") & Date <= as.Date("2007/02/02"))
head(final_data)
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
head(datetime)
head(final_data)
class(final_data$Time)
datetime <- strptime(paste(as.Character(final_data$Date), final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
datetime <- strptime(paste(as.character(final_data$Date), final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
datetime
time<-strptime(final_data$Time, "%H%M%S")
time
?strptime
final_data$Time
time<-strptime(final_data$Time, "%H:%M:%S")
time
datetime <- strptime(paste(as.character(final_data$Date), final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
rm(list = ls())
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
plot(datetime, final_data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
rm(list = ls())
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#Open the png device,explicitly state the dimensions and plot line graph
png("plot2.png", width=480, height=480)
plot(datetime, final_data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l")
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l")
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering", legend("topright"))
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering", legend("topright", c("sub_metering_1", "sub_metering_2", "sub_metering_3")))
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
legend("topright")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
rm(list = ls())
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
final_data$Global_reactive_power<-as.numeric(final_data$Global_reactive_power)
final_data$Voltage<-as.numeric(final_data$Voltage)
final_data[,3:9]<-as.numeric(final_data[,3:9])
final_data$Sub_metering_1<-as.numeric(final_data$Sub_metering_1)
final_data$Sub_metering_2<-as.numeric(final_data$Sub_metering_2)
final_data$Sub_metering_3<-as.numeric(final_data$Sub_metering_3)
summary(final_data)
par(mfrow = c(2,2))
plot(datetime, final_data$Global_active_power, line = "l", xlab = "", ylab = "Global Active Power", col = "black")
plot(datetime, final_data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power", col = "black")
plot.new()
plot(datetime, final_data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power", col = "black")
plot.new()
plot(datetime, final_data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power", col = "black")
plot.new()
plot.new()
plot(datetime, final_data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power", col = "black")
plot(datetime, final_data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage", col = "black")
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
plot(datetime, final_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
plot(datetime, final_data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power", col = "black", cex = 0.2)
plot(datetime, final_data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage", col = "black")
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
plot(datetime, final_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
rm(list = ls())
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#convert Character objects to Numeric objects
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
final_data$Global_reactive_power<-as.numeric(final_data$Global_reactive_power)
final_data$Voltage<-as.numeric(final_data$Voltage)
final_data$Sub_metering_1<-as.numeric(final_data$Sub_metering_1)
final_data$Sub_metering_2<-as.numeric(final_data$Sub_metering_2)
final_data$Sub_metering_3<-as.numeric(final_data$Sub_metering_3)
#Open the png device,explicitly state the dimensions and plot charts
png("plot4.png", width=480, height=480)
par(mfrow = c(2,2))
#chart 1
plot(datetime, final_data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power", col = "black", cex = 0.2)
#chart 2
plot(datetime, final_data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage", col = "black")
#chart 3
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"), bty = "o")
#chart 4
plot(datetime, final_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#convert Character objects to Numeric objects
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
final_data$Global_reactive_power<-as.numeric(final_data$Global_reactive_power)
final_data$Voltage<-as.numeric(final_data$Voltage)
final_data$Sub_metering_1<-as.numeric(final_data$Sub_metering_1)
final_data$Sub_metering_2<-as.numeric(final_data$Sub_metering_2)
final_data$Sub_metering_3<-as.numeric(final_data$Sub_metering_3)
#Open the png device,explicitly state the dimensions and plot charts
png("plot4.png", width=480, height=480)
par(mfrow = c(2,2))
#chart 1
plot(datetime, final_data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power", col = "black", cex = 0.2)
#chart 2
plot(datetime, final_data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage", col = "black")
#chart 3
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"), bty = "n")
#chart 4
plot(datetime, final_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
rm(list = ls())
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#Open the png device,explicitly state the dimensions and plot line graph
png("plot3.png", width=480, height=480)
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Convert Characters to Date objects in the Date column with the dd/mm/yyyy format
data$Date<-as.Date(data$Date, "%d/%m/%Y")
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-subset(data, Date >=As.Date("2007/02/01") & Date <= As.Date("2007/02/02"))
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Convert Characters to Numeric objects in the Global_active_power column
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
#Open the png device,explicitly state the dimensions and plot histogram
png("plot1.png", width=480, height=480)
hist(final_data$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Convert Characters to Date objects in the Date column with the dd/mm/yyyy format
data$Date<-as.Date(data$Date, "%d/%m/%Y")
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-subset(data, Date >=As.Date("2007/02/01") & Date <= As.Date("2007/02/02"))
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Convert Characters to Numeric objects in the Global_active_power column
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
#Open the png device,explicitly state the dimensions and plot histogram
png("plot1.png", width=480, height=480)
hist(final_data$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#Open the png device,explicitly state the dimensions and plot line graph
png("plot2.png", width=480, height=480)
plot(datetime, final_data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#Open the png device,explicitly state the dimensions and plot line graph
png("plot3.png", width=480, height=480)
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
#Read household power consumption file
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, stringsAsFactors = FALSE)
#Select only the rows corresponding to 01/02/2007 and 02/02/2007 and store in another table
final_data<-data[data$Date %in%c("1/2/2007","2/2/2007"),]
#Free up memory by removing the "data" table from the Global Environment
rm(data)
#Create a vector called datetime by merging the Date and Time columns
datetime <- strptime(paste(final_data$Date, final_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#convert Character objects to Numeric objects
final_data$Global_active_power<-as.numeric(final_data$Global_active_power)
final_data$Global_reactive_power<-as.numeric(final_data$Global_reactive_power)
final_data$Voltage<-as.numeric(final_data$Voltage)
final_data$Sub_metering_1<-as.numeric(final_data$Sub_metering_1)
final_data$Sub_metering_2<-as.numeric(final_data$Sub_metering_2)
final_data$Sub_metering_3<-as.numeric(final_data$Sub_metering_3)
#Open the png device,explicitly state the dimensions and plot charts
png("plot4.png", width=480, height=480)
par(mfrow = c(2,2))
#chart 1
plot(datetime, final_data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power", col = "black", cex = 0.2)
#chart 2
plot(datetime, final_data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage", col = "black")
#chart 3
plot(datetime, final_data$Sub_metering_1, col = "black", type = "l", xlab = "", ylab = "Energy sub metering")
lines(datetime, final_data$Sub_metering_2, col = "red", type = "l")
lines(datetime, final_data$Sub_metering_3, col = "blue", type = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"), bty = "n")
#chart 4
plot(datetime, final_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
